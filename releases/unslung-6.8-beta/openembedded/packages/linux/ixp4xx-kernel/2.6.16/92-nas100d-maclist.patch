 arch/arm/mach-ixp4xx/Kconfig         |    1 
 arch/arm/mach-ixp4xx/nas100d-setup.c |   39 +++++++++++++++++++++++++++++++++++
 2 files changed, 40 insertions(+)

--- linux-nslu2.orig/arch/arm/mach-ixp4xx/Kconfig	2006-02-06 22:34:20.000000000 +0100
+++ linux-nslu2/arch/arm/mach-ixp4xx/Kconfig	2006-02-06 22:35:26.000000000 +0100
@@ -80,6 +80,7 @@ config ARCH_PRPMC1100
 config MACH_NAS100D
 	bool
 	prompt "NAS100D"
+	select MACLIST
 	help
 	  Say 'Y' here if you want your kernel to support Iomega's
 	  NAS 100d device. For more information on this platform,
--- linux-nslu2.orig/arch/arm/mach-ixp4xx/nas100d-setup.c	2006-02-06 20:37:01.000000000 +0100
+++ linux-nslu2/arch/arm/mach-ixp4xx/nas100d-setup.c	2006-02-06 22:35:26.000000000 +0100
@@ -15,11 +15,14 @@
 #include <linux/kernel.h>
 #include <linux/serial.h>
 #include <linux/serial_8250.h>
+#include <linux/mtd/mtd.h>
 
 #include <asm/mach-types.h>
 #include <asm/mach/arch.h>
 #include <asm/mach/flash.h>
 
+#include <net/maclist.h>
+
 static struct flash_platform_data nas100d_flash_data = {
 	.map_name		= "cfi_probe",
 	.width			= 2,
@@ -109,8 +112,44 @@ static void nas100d_power_off(void)
 	gpio_line_set(NAS100D_PO_GPIO, IXP4XX_GPIO_HIGH);
 }
 
+/*
+ * When the RedBoot config partition is added the MAC address is read from
+ * it.
+ */
+static void nas100d_flash_add(struct mtd_info *mtd) {
+	if (strcmp(mtd->name, "RedBoot config") == 0) {
+		size_t retlen;
+		u_char mac[6];
+
+		/* The MAC is at a known offset... */
+		if (mtd->read(mtd, 0x0FD8, 6, &retlen, mac) == 0 && retlen == 6) {
+			printk(KERN_INFO "NAS100D MAC: %.2x:%.2x:%.2x:%.2x:%.2x:%.2x\n",
+				mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
+			maclist_add(mac);
+		} else {
+			printk(KERN_ERR "NAS100D MAC: read failed\n");
+		}
+	}
+}
+
+/*
+ * Nothing to do on remove at present.
+ */
+static void nas100d_flash_remove(struct mtd_info *mtd) {
+}
+
+static struct mtd_notifier nas100d_flash_notifier = {
+	.add = nas100d_flash_add,
+	.remove = nas100d_flash_remove,
+};
+
 static void __init nas100d_init(void)
 {
+	/* The flash has an ethernet MAC embedded in it which we need,
+	 * that is all this notifier does.
+	 */
+	register_mtd_user(&nas100d_flash_notifier);
+
 	ixp4xx_sys_init();
 
 	nas100d_flash_resource.start = IXP4XX_EXP_BUS_BASE(0);
